pipeline {
    agent any
    triggers { 
        pollSCM('*/1 * * * *') 
    }
    stages {
        stage('build') {
            steps {
                echo "building node application.."
            }
        }
        stage('deploy-dev') {
            steps {
                deploy("DEV")
            }
        }
        stage('test-dev') {
            steps {
                 test("DEV")
            }
        }
        stage('deploy-int') {
            steps {
                 deploy("INT")
            }
        }
        stage('test-int') {
            steps {
                 test("INT")
            }
        }
        stage('deploy-prd') {
            steps {
                 deploy("PRD")
            }
        }
        stage('test-prd') {
            steps {
                 test("PRD")
            }
        }
    }
    post { 
        always { 
            echo 'I will always be executed'
        }
        success{
            echo 'This will be executed on success'
        }
        failure{
            echo 'This will be executed on failure'
        }
    }
}

def deploy(String environment) {
     echo "Deployment on ${environment} environment triggered.."
     build job: "UI tests", parameters: [string(name: "ENVIRONMENT", value:"${environment}")]
}

def test(String environment){
    echo "Tests on ${environment} environmnt triggered.."
    sh "docker run --network=host -d -t --name api_tests_executor_${environment} api_test_executor"
    try{
        sh "docker exec api_tests_executor_${environment} cucumber --tags=@${environment} --format html --out test-output/report.html"
    }
    finally{
        sh "docker cp api_tests_executor_${environment}:/usr/src/api-tests/test-output/report.html report_${environment}.html"
        sh "docker rm -f api_tests_executor_${environment}"
        sh "ls"
    }
}
